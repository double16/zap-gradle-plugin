import org.apache.http.client.utils.URLEncodedUtils
import org.apache.http.message.BasicNameValuePair

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.patdouble.gradle:zap-gradle-plugin:2.0-SNAPSHOT'
        classpath 'org.apache.httpcomponents:httpclient:4.5.3'
    }
}

apply plugin: 'zap'

zapConfig {
    applicationUrl = 'http://localhost:8080/WebGoat/start.mvc#lesson/WebGoatIntroduction.lesson'
    activeScanTimeout = "0"
}

task zapSetup(dependsOn: zapStart) {
    doLast {
        zapConfig.api {
            project.ext.contextId = context.newContext(project.name).value
            context.includeInContext(project.name, "\\Qhttp://localhost:8080/WebGoat/\\E.*")
            logger.quiet "Context ID = ${project.ext.contextId}"

            String formBaseAuthParams = URLEncodedUtils.format([new BasicNameValuePair('loginUrl', 'http://localhost:8080/WebGoat/login'), new BasicNameValuePair('loginRequestData', 'username={%username%}&password={%password%}')], "UTF-8")

            logger.quiet "formBaseAuthParams = ${formBaseAuthParams}"
            authentication.setAuthenticationMethod(project.ext.contextId, 'formBasedAuthentication', formBaseAuthParams)
            authentication.setLoggedOutIndicator(project.ext.contextId, '(?:Location: .*/login)|(?:\\QLogin Page\\E)')

            project.ext.adminId = users.newUser(project.ext.contextId, 'User').value
            logger.quiet "Admin ID = ${project.ext.adminId}"
            users.setAuthenticationCredentials(project.ext.contextId, project.ext.adminId, "username=username1&password=Passw0rd")
            users.setUserEnabled(project.ext.contextId, project.ext.adminId, "true")

            forcedUser.setForcedUser(project.ext.contextId, project.ext.adminId)
            forcedUser.setForcedUserModeEnabled(true)

            spider.setOptionAcceptCookies(true)
        }
    }
}
zapSpider.dependsOn zapSetup
zapAjaxSpider.dependsOn zapSetup
zapActiveScan.dependsOn zapSetup
zapStop.mustRunAfter zapSetup
